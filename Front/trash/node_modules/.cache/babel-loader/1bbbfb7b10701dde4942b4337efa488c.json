{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ilyas\\\\Desktop\\\\React\\\\apeiron\\\\my-app\\\\src\\\\component\\\\profile\\\\ProfilePostsFeatures\\\\ProfilePostsFeaturesContainer.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { addPost, setPosts, toggleIsFetching, updateNewText } from '../../../Redux/posts-reducer';\nimport ProfilePostNwritePost from './ProfilePostNwritePost';\nimport GetCookie from '../../../hook/getCookie';\nimport axios from 'axios';\nimport ProfilePost from './ProfilePosts/ProfilePost';\nimport Preloader from '../../common/preloader/preloader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nclass ProfilePostsFeaturesContainer extends React.Component {\n  async componentDidMount() {\n    this.props.toggleIsFetching(true);\n    // const Cookie = JSON.parse(GetCookie('usrin'));\n    // const CookieToken = Cookie['token'];\n    // console.log();\n    // console.log(CookieToken);\n    await axios.get(`http://apeiron-test.kz/posts`, {\n      headers: {\n        Authorization: 'Bearer ' + JSON.parse(GetCookie('usrin'))['token']\n      }\n    }).then(response => {\n      // console.log(response);\n      this.props.setPosts(response.data);\n      this.props.toggleIsFetching(false);\n      //console.log(this.props);\n      //let PostsData = this.props.Posts[0].map(post => <ProfilePost key={post.id} ProfileName={props.ProfileLogin} data={post.data} messages={post.message} like={post.countOfLikes} commetsCount={post.countOfComments}  repostsCount={post.repostsCount} postImage={post.imagePath}/>);\n      // Posts = response.data;\n    });\n\n    // console.log(this.props);\n  }\n\n  // PostMap = () => {\n  //   return this.props.Posts.map(post => <ProfilePost key={post.id} ProfileName={this.props.ProfileLogin} data={post.data} messages={post.message} like={post.countOfLikes} commetsCount={post.countOfComments}  repostsCount={post.repostsCount} postImage={post.imagePath}/>)\n  // }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [this.props.isFetching ? /*#__PURE__*/_jsxDEV(Preloader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 34\n      }, this) : null, /*#__PURE__*/_jsxDEV(ProfilePostNwritePost, {\n        ProfileLogin: this.props.ProfileLogin,\n        updataNewPostText: this.props.updateNewText,\n        addPost: this.props.addPost,\n        newPostText: this.props.newPostText,\n        Posts: this.props.posts,\n        SetPosts: this.props.setPosts\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n}\nlet mapStateToProps = state => {\n  return {\n    posts: state.PostsData.Posts,\n    newPostText: state.PostsData.newPostText,\n    profile: state.ProfileData.profile.login\n  };\n};\nconst ProfilePostsFeaturesContainerE = connect(mapStateToProps, {\n  updateNewText,\n  addPost,\n  setPosts,\n  toggleIsFetching\n})(ProfilePostsFeaturesContainer);\nexport default ProfilePostsFeaturesContainerE;","map":{"version":3,"names":["React","connect","addPost","setPosts","toggleIsFetching","updateNewText","ProfilePostNwritePost","GetCookie","axios","ProfilePost","Preloader","ProfilePostsFeaturesContainer","Component","componentDidMount","props","get","headers","Authorization","JSON","parse","then","response","data","render","isFetching","ProfileLogin","newPostText","posts","mapStateToProps","state","PostsData","Posts","profile","ProfileData","login","ProfilePostsFeaturesContainerE"],"sources":["C:/Users/Ilyas/Desktop/React/apeiron/my-app/src/component/profile/ProfilePostsFeatures/ProfilePostsFeaturesContainer.jsx"],"sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { addPost, setPosts, toggleIsFetching, updateNewText } from '../../../Redux/posts-reducer';\r\nimport ProfilePostNwritePost from './ProfilePostNwritePost';\r\nimport GetCookie from '../../../hook/getCookie';\r\nimport axios from 'axios';\r\nimport ProfilePost from './ProfilePosts/ProfilePost';\r\nimport Preloader from '../../common/preloader/preloader';\r\n\r\nclass ProfilePostsFeaturesContainer extends React.Component{\r\n  async componentDidMount(){\r\n    this.props.toggleIsFetching(true);\r\n    // const Cookie = JSON.parse(GetCookie('usrin'));\r\n    // const CookieToken = Cookie['token'];\r\n    // console.log();\r\n    // console.log(CookieToken);\r\n    await axios.get(`http://apeiron-test.kz/posts`,{\r\n          headers:{\r\n            Authorization: 'Bearer ' + JSON.parse(GetCookie('usrin'))['token']\r\n          }\r\n        })\r\n        .then(response =>{\r\n          // console.log(response);\r\n          this.props.setPosts(response.data);\r\n          this.props.toggleIsFetching(false);\r\n          //console.log(this.props);\r\n          //let PostsData = this.props.Posts[0].map(post => <ProfilePost key={post.id} ProfileName={props.ProfileLogin} data={post.data} messages={post.message} like={post.countOfLikes} commetsCount={post.countOfComments}  repostsCount={post.repostsCount} postImage={post.imagePath}/>);\r\n          // Posts = response.data;\r\n        })\r\n        \r\n        // console.log(this.props);\r\n  }\r\n\r\n  // PostMap = () => {\r\n  //   return this.props.Posts.map(post => <ProfilePost key={post.id} ProfileName={this.props.ProfileLogin} data={post.data} messages={post.message} like={post.countOfLikes} commetsCount={post.countOfComments}  repostsCount={post.repostsCount} postImage={post.imagePath}/>)\r\n  // }\r\n\r\n  render(){\r\n    return <>\r\n        {this.props.isFetching ? <Preloader/>:null}\r\n        <ProfilePostNwritePost \r\n                              ProfileLogin={this.props.ProfileLogin}\r\n                              updataNewPostText={this.props.updateNewText}\r\n                              addPost={this.props.addPost}\r\n                              newPostText={this.props.newPostText}\r\n                              Posts={this.props.posts}\r\n                              SetPosts={this.props.setPosts}/>\r\n    </>\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n  return{\r\n      posts: state.PostsData.Posts,\r\n      newPostText: state.PostsData.newPostText,\r\n      profile: state.ProfileData.profile.login,\r\n  }\r\n} \r\n\r\n\r\nconst ProfilePostsFeaturesContainerE = connect(mapStateToProps,{updateNewText,addPost,setPosts,toggleIsFetching})(ProfilePostsFeaturesContainer);\r\n\r\nexport default ProfilePostsFeaturesContainerE;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,OAAO,QAAQ,aAAa;AACrC,SAASC,OAAO,EAAEC,QAAQ,EAAEC,gBAAgB,EAAEC,aAAa,QAAQ,8BAA8B;AACjG,OAAOC,qBAAqB,MAAM,yBAAyB;AAC3D,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,WAAW,MAAM,4BAA4B;AACpD,OAAOC,SAAS,MAAM,kCAAkC;AAAC;AAAA;AAEzD,MAAMC,6BAA6B,SAASX,KAAK,CAACY,SAAS;EACzD,MAAMC,iBAAiB,GAAE;IACvB,IAAI,CAACC,KAAK,CAACV,gBAAgB,CAAC,IAAI,CAAC;IACjC;IACA;IACA;IACA;IACA,MAAMI,KAAK,CAACO,GAAG,CAAE,8BAA6B,EAAC;MACzCC,OAAO,EAAC;QACNC,aAAa,EAAE,SAAS,GAAGC,IAAI,CAACC,KAAK,CAACZ,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC,OAAO;MACnE;IACF,CAAC,CAAC,CACDa,IAAI,CAACC,QAAQ,IAAG;MACf;MACA,IAAI,CAACP,KAAK,CAACX,QAAQ,CAACkB,QAAQ,CAACC,IAAI,CAAC;MAClC,IAAI,CAACR,KAAK,CAACV,gBAAgB,CAAC,KAAK,CAAC;MAClC;MACA;MACA;IACF,CAAC,CAAC;;IAEF;EACN;;EAEA;EACA;EACA;;EAEAmB,MAAM,GAAE;IACN,oBAAO;MAAA,WACF,IAAI,CAACT,KAAK,CAACU,UAAU,gBAAG,QAAC,SAAS;QAAA;QAAA;QAAA;MAAA,QAAE,GAAC,IAAI,eAC1C,QAAC,qBAAqB;QACA,YAAY,EAAE,IAAI,CAACV,KAAK,CAACW,YAAa;QACtC,iBAAiB,EAAE,IAAI,CAACX,KAAK,CAACT,aAAc;QAC5C,OAAO,EAAE,IAAI,CAACS,KAAK,CAACZ,OAAQ;QAC5B,WAAW,EAAE,IAAI,CAACY,KAAK,CAACY,WAAY;QACpC,KAAK,EAAE,IAAI,CAACZ,KAAK,CAACa,KAAM;QACxB,QAAQ,EAAE,IAAI,CAACb,KAAK,CAACX;MAAS;QAAA;QAAA;QAAA;MAAA,QAAE;IAAA,gBACvD;EACL;AACF;AAEA,IAAIyB,eAAe,GAAIC,KAAK,IAAK;EAC/B,OAAM;IACFF,KAAK,EAAEE,KAAK,CAACC,SAAS,CAACC,KAAK;IAC5BL,WAAW,EAAEG,KAAK,CAACC,SAAS,CAACJ,WAAW;IACxCM,OAAO,EAAEH,KAAK,CAACI,WAAW,CAACD,OAAO,CAACE;EACvC,CAAC;AACH,CAAC;AAGD,MAAMC,8BAA8B,GAAGlC,OAAO,CAAC2B,eAAe,EAAC;EAACvB,aAAa;EAACH,OAAO;EAACC,QAAQ;EAACC;AAAgB,CAAC,CAAC,CAACO,6BAA6B,CAAC;AAEhJ,eAAewB,8BAA8B"},"metadata":{},"sourceType":"module"}