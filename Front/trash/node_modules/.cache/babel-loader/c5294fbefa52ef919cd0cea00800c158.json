{"ast":null,"code":"import { rerenderEntireTree } from \"../render\";\nlet state = {\n  profilePage: {\n    Posts: [{\n      id: 1,\n      messages: \"Hi, how are you\",\n      likesCount: 15\n    }, {\n      id: 2,\n      messages: \"it's my first post\",\n      likesCount: 20\n    }],\n    newPostText: \"Hello World10\"\n  },\n  MessagesPage: {\n    messagesData: [{\n      id: 1,\n      messages: \"Hi\"\n    }, {\n      id: 2,\n      messages: \"How are you?\"\n    }, {\n      id: 3,\n      messages: \"What is your name?\"\n    }],\n    dialogsData: [{\n      id: 1,\n      name: \"Dima\"\n    }, {\n      id: 2,\n      name: \"Ilyas\"\n    }, {\n      id: 3,\n      name: \"Vanya\"\n    }, {\n      id: 4,\n      name: \"Sasha\"\n    }, {\n      id: 5,\n      name: \"Maximilian\"\n    }],\n    MessageText: \"Hi\"\n  }\n};\nexport let addPost = () => {\n  let newPost = {\n    id: 5,\n    messages: state.profilePage.newPostText,\n    likesCount: 0\n  };\n  state.profilePage.Posts.push(newPost);\n  state.profilePage.newPostText = \"\";\n  rerenderEntireTree(state);\n};\nexport let UpdateNewPostText = newText => {\n  state.profilePage.newPostText = newText;\n  rerenderEntireTree(state);\n};\n_c = UpdateNewPostText;\nexport let addMessage = () => {\n  let newMessage = {\n    id: 4,\n    messages: state.MessagesPage.MessageText\n  };\n  state.MessagesPage.MessageText.push(newMessage);\n  state.MessagesPage.MessageText = \"\";\n  rerenderEntireTree(state);\n};\nexport let UpdateMessageText = newMessage => {\n  state.MessagesPage.MessageText = newMessage;\n  rerenderEntireTree(state);\n};\n_c2 = UpdateMessageText;\nexport default state;\nvar _c, _c2;\n$RefreshReg$(_c, \"UpdateNewPostText\");\n$RefreshReg$(_c2, \"UpdateMessageText\");","map":{"version":3,"names":["rerenderEntireTree","state","profilePage","Posts","id","messages","likesCount","newPostText","MessagesPage","messagesData","dialogsData","name","MessageText","addPost","newPost","push","UpdateNewPostText","newText","addMessage","newMessage","UpdateMessageText"],"sources":["C:/Users/Ilyas/Desktop/React tutorial/it-kamasutra01/src/Redux/State.js"],"sourcesContent":["import { rerenderEntireTree } from \"../render\";\r\n\r\nlet state = {\r\n    profilePage:{\r\n        Posts:[\r\n            {id: 1, messages: \"Hi, how are you\", likesCount: 15},\r\n            {id: 2,messages: \"it's my first post\",likesCount: 20},\r\n            ],\r\n        newPostText: \"Hello World10\",\r\n    },\r\n    MessagesPage:{\r\n        messagesData:[\r\n            {id: 1, messages: \"Hi\"},\r\n            {id: 2, messages: \"How are you?\"},\r\n            {id: 3, messages: \"What is your name?\"},\r\n        ],\r\n        dialogsData:[\r\n            {id: 1, name: \"Dima\"},\r\n            {id: 2, name: \"Ilyas\"},\r\n            {id: 3, name: \"Vanya\"},\r\n            {id: 4, name: \"Sasha\"},\r\n            {id: 5, name: \"Maximilian\"}\r\n        ],\r\n        MessageText: \"Hi\",\r\n    }\r\n}\r\n\r\nexport let addPost = () => {\r\n    let newPost = {\r\n        id:5,\r\n        messages: state.profilePage.newPostText,\r\n        likesCount:0,\r\n    }\r\n\r\n    state.profilePage.Posts.push(newPost);\r\n    state.profilePage.newPostText = \"\";\r\n    rerenderEntireTree(state);\r\n};\r\n\r\nexport let UpdateNewPostText = (newText) => {\r\n    state.profilePage.newPostText = newText;\r\n    rerenderEntireTree(state);\r\n};\r\n\r\nexport let addMessage = () => {\r\n    let newMessage = {\r\n        id:4,\r\n        messages: state.MessagesPage.MessageText,\r\n    }\r\n\r\n    state.MessagesPage.MessageText.push(newMessage);\r\n    state.MessagesPage.MessageText = \"\";\r\n    rerenderEntireTree(state);\r\n};\r\n\r\nexport let UpdateMessageText = (newMessage) => {\r\n    state.MessagesPage.MessageText = newMessage;\r\n    rerenderEntireTree(state);\r\n};\r\n\r\nexport default state;"],"mappings":"AAAA,SAASA,kBAAkB,QAAQ,WAAW;AAE9C,IAAIC,KAAK,GAAG;EACRC,WAAW,EAAC;IACRC,KAAK,EAAC,CACF;MAACC,EAAE,EAAE,CAAC;MAAEC,QAAQ,EAAE,iBAAiB;MAAEC,UAAU,EAAE;IAAE,CAAC,EACpD;MAACF,EAAE,EAAE,CAAC;MAACC,QAAQ,EAAE,oBAAoB;MAACC,UAAU,EAAE;IAAE,CAAC,CACpD;IACLC,WAAW,EAAE;EACjB,CAAC;EACDC,YAAY,EAAC;IACTC,YAAY,EAAC,CACT;MAACL,EAAE,EAAE,CAAC;MAAEC,QAAQ,EAAE;IAAI,CAAC,EACvB;MAACD,EAAE,EAAE,CAAC;MAAEC,QAAQ,EAAE;IAAc,CAAC,EACjC;MAACD,EAAE,EAAE,CAAC;MAAEC,QAAQ,EAAE;IAAoB,CAAC,CAC1C;IACDK,WAAW,EAAC,CACR;MAACN,EAAE,EAAE,CAAC;MAAEO,IAAI,EAAE;IAAM,CAAC,EACrB;MAACP,EAAE,EAAE,CAAC;MAAEO,IAAI,EAAE;IAAO,CAAC,EACtB;MAACP,EAAE,EAAE,CAAC;MAAEO,IAAI,EAAE;IAAO,CAAC,EACtB;MAACP,EAAE,EAAE,CAAC;MAAEO,IAAI,EAAE;IAAO,CAAC,EACtB;MAACP,EAAE,EAAE,CAAC;MAAEO,IAAI,EAAE;IAAY,CAAC,CAC9B;IACDC,WAAW,EAAE;EACjB;AACJ,CAAC;AAED,OAAO,IAAIC,OAAO,GAAG,MAAM;EACvB,IAAIC,OAAO,GAAG;IACVV,EAAE,EAAC,CAAC;IACJC,QAAQ,EAAEJ,KAAK,CAACC,WAAW,CAACK,WAAW;IACvCD,UAAU,EAAC;EACf,CAAC;EAEDL,KAAK,CAACC,WAAW,CAACC,KAAK,CAACY,IAAI,CAACD,OAAO,CAAC;EACrCb,KAAK,CAACC,WAAW,CAACK,WAAW,GAAG,EAAE;EAClCP,kBAAkB,CAACC,KAAK,CAAC;AAC7B,CAAC;AAED,OAAO,IAAIe,iBAAiB,GAAIC,OAAO,IAAK;EACxChB,KAAK,CAACC,WAAW,CAACK,WAAW,GAAGU,OAAO;EACvCjB,kBAAkB,CAACC,KAAK,CAAC;AAC7B,CAAC;AAAC,KAHSe,iBAAiB;AAK5B,OAAO,IAAIE,UAAU,GAAG,MAAM;EAC1B,IAAIC,UAAU,GAAG;IACbf,EAAE,EAAC,CAAC;IACJC,QAAQ,EAAEJ,KAAK,CAACO,YAAY,CAACI;EACjC,CAAC;EAEDX,KAAK,CAACO,YAAY,CAACI,WAAW,CAACG,IAAI,CAACI,UAAU,CAAC;EAC/ClB,KAAK,CAACO,YAAY,CAACI,WAAW,GAAG,EAAE;EACnCZ,kBAAkB,CAACC,KAAK,CAAC;AAC7B,CAAC;AAED,OAAO,IAAImB,iBAAiB,GAAID,UAAU,IAAK;EAC3ClB,KAAK,CAACO,YAAY,CAACI,WAAW,GAAGO,UAAU;EAC3CnB,kBAAkB,CAACC,KAAK,CAAC;AAC7B,CAAC;AAAC,MAHSmB,iBAAiB;AAK5B,eAAenB,KAAK;AAAC;AAAA;AAAA"},"metadata":{},"sourceType":"module"}