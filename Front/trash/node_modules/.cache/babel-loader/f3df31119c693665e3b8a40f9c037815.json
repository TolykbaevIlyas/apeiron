{"ast":null,"code":"import { NavLink } from 'react-router-dom';\nimport DialogItem from './DialogItem/DialogItem';\nimport classes from './Dialogs.module.css';\nimport Message from './Message/Message';\nimport React from 'react';\nimport { addMeassageActionCreater, updateNewTextMessageActionCreater } from '../../Redux/dialogs-reducer';\nimport Dialogs from './Dialogs';\nimport StoreContext from '../../StoreContext';\nimport { connect } from 'react-redux';\nimport store from '../../Redux/redux-store';\n\n// const DialogsContainer = () =>{\n\n//     return(\n//         <StoreContext.Consumer>\n//             {(store) => {\n//                 let state = store.getState();\n\n//                 let addMessage = () => {\n//                     store.dispatch(addMeassageActionCreater());\n//                 };\n\n//                 let onMessageText = (text) =>{\n//                     let action = updateNewTextMessageActionCreater(text);\n//                     store.dispatch(action);\n//                 };\n//                 return(\n//                     <Dialogs upadeNewMessageBody={onMessageText} sendMessage={addMessage} dialogsPage={state.MessagesPage}/>\n//                 );\n//             }\n//             }\n\n//         </StoreContext.Consumer>\n\n//     );\n// }\n\nlet mapStateToProps = state => {\n  return {\n    dialogsPage: state.MessagesPage\n  };\n};\nlet mapDispatchToProps = dispatch => {\n  return {\n    upadeNewMessageBody: text => {\n      let action = updateNewTextMessageActionCreater(text);\n      store.dispatch(action);\n    },\n    sendMessage: () => {\n      store.dispatch(addMeassageActionCreater());\n    }\n  };\n};\nconst SuperDialogsContainer = connect(mapStateToProps, mapDispatchToProps)(Dialogs);\nexport default DialogsContainer;","map":{"version":3,"names":["NavLink","DialogItem","classes","Message","React","addMeassageActionCreater","updateNewTextMessageActionCreater","Dialogs","StoreContext","connect","store","mapStateToProps","state","dialogsPage","MessagesPage","mapDispatchToProps","dispatch","upadeNewMessageBody","text","action","sendMessage","SuperDialogsContainer","DialogsContainer"],"sources":["C:/Users/Ilyas/Desktop/React tutorial/it-kamasutra01/src/components/Dialogs/DialogsContainer.jsx"],"sourcesContent":["import { NavLink } from 'react-router-dom';\r\nimport DialogItem from './DialogItem/DialogItem';\r\nimport classes from './Dialogs.module.css'\r\nimport Message from './Message/Message';\r\nimport React from 'react'  ;\r\nimport { addMeassageActionCreater, updateNewTextMessageActionCreater } from '../../Redux/dialogs-reducer';\r\nimport Dialogs from './Dialogs';\r\nimport StoreContext from '../../StoreContext';\r\nimport { connect } from 'react-redux';\r\nimport store from '../../Redux/redux-store';\r\n\r\n// const DialogsContainer = () =>{\r\n\r\n//     return(\r\n//         <StoreContext.Consumer>\r\n//             {(store) => {\r\n//                 let state = store.getState();\r\n\r\n//                 let addMessage = () => {\r\n//                     store.dispatch(addMeassageActionCreater());\r\n//                 };\r\n                \r\n//                 let onMessageText = (text) =>{\r\n//                     let action = updateNewTextMessageActionCreater(text);\r\n//                     store.dispatch(action);\r\n//                 };\r\n//                 return(\r\n//                     <Dialogs upadeNewMessageBody={onMessageText} sendMessage={addMessage} dialogsPage={state.MessagesPage}/>\r\n//                 );\r\n//             }\r\n//             }\r\n            \r\n//         </StoreContext.Consumer>\r\n        \r\n//     );\r\n// }\r\n\r\nlet mapStateToProps = (state) => {\r\n    return{\r\n        dialogsPage: state.MessagesPage  \r\n    }\r\n} \r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return{\r\n        upadeNewMessageBody: (text) => {\r\n            let action = updateNewTextMessageActionCreater(text);\r\n            store.dispatch(action);\r\n        },\r\n        sendMessage: () => {\r\n            store.dispatch(addMeassageActionCreater());\r\n        }\r\n    }\r\n} \r\n\r\nconst SuperDialogsContainer = connect(mapStateToProps,mapDispatchToProps)(Dialogs);\r\n\r\nexport default DialogsContainer;"],"mappings":"AAAA,SAASA,OAAO,QAAQ,kBAAkB;AAC1C,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAOC,OAAO,MAAM,sBAAsB;AAC1C,OAAOC,OAAO,MAAM,mBAAmB;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,wBAAwB,EAAEC,iCAAiC,QAAQ,6BAA6B;AACzG,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAOC,YAAY,MAAM,oBAAoB;AAC7C,SAASC,OAAO,QAAQ,aAAa;AACrC,OAAOC,KAAK,MAAM,yBAAyB;;AAE3C;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA,IAAIC,eAAe,GAAIC,KAAK,IAAK;EAC7B,OAAM;IACFC,WAAW,EAAED,KAAK,CAACE;EACvB,CAAC;AACL,CAAC;AAED,IAAIC,kBAAkB,GAAIC,QAAQ,IAAK;EACnC,OAAM;IACFC,mBAAmB,EAAGC,IAAI,IAAK;MAC3B,IAAIC,MAAM,GAAGb,iCAAiC,CAACY,IAAI,CAAC;MACpDR,KAAK,CAACM,QAAQ,CAACG,MAAM,CAAC;IAC1B,CAAC;IACDC,WAAW,EAAE,MAAM;MACfV,KAAK,CAACM,QAAQ,CAACX,wBAAwB,EAAE,CAAC;IAC9C;EACJ,CAAC;AACL,CAAC;AAED,MAAMgB,qBAAqB,GAAGZ,OAAO,CAACE,eAAe,EAACI,kBAAkB,CAAC,CAACR,OAAO,CAAC;AAElF,eAAee,gBAAgB"},"metadata":{},"sourceType":"module"}