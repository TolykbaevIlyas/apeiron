{"ast":null,"code":"const ADD_POST = 'ADD-POST';\nlet store = {\n  _state: {\n    profilePage: {\n      Posts: [{\n        id: 1,\n        messages: \"Hi, how are you\",\n        likesCount: 15\n      }, {\n        id: 2,\n        messages: \"it's my first post\",\n        likesCount: 20\n      }],\n      newPostText: \"Hello World10\"\n    },\n    MessagesPage: {\n      messagesData: [{\n        id: 1,\n        messages: \"Hi\"\n      }, {\n        id: 2,\n        messages: \"How are you?\"\n      }, {\n        id: 3,\n        messages: \"What is your name?\"\n      }],\n      dialogsData: [{\n        id: 1,\n        name: \"Dima\"\n      }, {\n        id: 2,\n        name: \"Ilyas\"\n      }, {\n        id: 3,\n        name: \"Vanya\"\n      }, {\n        id: 4,\n        name: \"Sasha\"\n      }, {\n        id: 5,\n        name: \"Maximilian\"\n      }],\n      MessageText: \"Hi\"\n    }\n  },\n  _CallSubscriber() {\n    console.log(\"good\");\n  },\n  GetState() {\n    return this._state;\n  },\n  subscribe(observer) {\n    this._CallSubscriber = observer;\n  },\n  dispatch(action) {\n    if (action.type === 'ADD-POST') {\n      let newPost = {\n        id: 5,\n        messages: this._state.profilePage.newPostText,\n        likesCount: 0\n      };\n      this._state.profilePage.Posts.push(newPost);\n      this._state.profilePage.newPostText = \"\";\n      this._CallSubscriber(this._state);\n    } else if (action.type === 'UPDATE-NEW-POST-TEXT') {\n      this._state.profilePage.newPostText = action.newText;\n      this._CallSubscriber(this._state);\n    } else if (action.type === 'ADD-MESSAGE') {\n      let newMessage = {\n        id: 4,\n        messages: this._state.MessagesPage.MessageText\n      };\n      this._state.MessagesPage.messagesData.push(newMessage);\n      this._state.MessagesPage.MessageText = \"\";\n      this._CallSubscriber(this._state);\n    } else if (action.type === 'UPDATE-NEW-MESSAGE-TEXT') {\n      this._state.MessagesPage.MessageText = action.newMessage;\n      this._CallSubscriber(this._state);\n    }\n  }\n};\nexport const addPostActionCreater = () => {\n  return {\n    type: 'ADD-POST'\n  };\n};\nexport const updateNewTextActionCreater = text => {\n  return {\n    type: 'UPDATE-NEW-POST-TEXT',\n    newText: text\n  };\n};\nexport default store;","map":{"version":3,"names":["ADD_POST","store","_state","profilePage","Posts","id","messages","likesCount","newPostText","MessagesPage","messagesData","dialogsData","name","MessageText","_CallSubscriber","console","log","GetState","subscribe","observer","dispatch","action","type","newPost","push","newText","newMessage","addPostActionCreater","updateNewTextActionCreater","text"],"sources":["C:/Users/Ilyas/Desktop/React tutorial/it-kamasutra01/src/Redux/State.js"],"sourcesContent":["const ADD_POST = 'ADD-POST';\r\n\r\nlet store = {\r\n    _state: {\r\n        profilePage:{\r\n            Posts:[\r\n                {id: 1, messages: \"Hi, how are you\", likesCount: 15},\r\n                {id: 2,messages: \"it's my first post\",likesCount: 20},\r\n                ],\r\n            newPostText: \"Hello World10\",\r\n        },\r\n        MessagesPage:{\r\n            messagesData:[\r\n                {id: 1, messages: \"Hi\"},\r\n                {id: 2, messages: \"How are you?\"},\r\n                {id: 3, messages: \"What is your name?\"},\r\n            ],\r\n            dialogsData:[\r\n                {id: 1, name: \"Dima\"},\r\n                {id: 2, name: \"Ilyas\"},\r\n                {id: 3, name: \"Vanya\"},\r\n                {id: 4, name: \"Sasha\"},\r\n                {id: 5, name: \"Maximilian\"}\r\n            ],\r\n            MessageText: \"Hi\",\r\n        }\r\n    },\r\n    _CallSubscriber(){\r\n        console.log(\"good\");\r\n    },\r\n    GetState(){\r\n        return this._state;\r\n    },\r\n    subscribe(observer){\r\n        this._CallSubscriber = observer;\r\n    },\r\n    dispatch (action){\r\n        if(action.type === 'ADD-POST'){\r\n            let newPost = {\r\n                id:5,\r\n                messages: this._state.profilePage.newPostText,\r\n                likesCount:0,\r\n            }\r\n        \r\n            this._state.profilePage.Posts.push(newPost);\r\n            this._state.profilePage.newPostText = \"\";\r\n            this._CallSubscriber(this._state);\r\n        }\r\n        else if(action.type === 'UPDATE-NEW-POST-TEXT'){\r\n            this._state.profilePage.newPostText = action.newText;\r\n            this._CallSubscriber(this._state);\r\n        }\r\n        else if(action.type === 'ADD-MESSAGE'){\r\n            let newMessage = {\r\n                id:4,\r\n                messages: this._state.MessagesPage.MessageText,\r\n            }\r\n        \r\n            this._state.MessagesPage.messagesData.push(newMessage);\r\n            this._state.MessagesPage.MessageText = \"\";\r\n            this._CallSubscriber(this._state);\r\n        }\r\n        else if(action.type === 'UPDATE-NEW-MESSAGE-TEXT'){\r\n            this._state.MessagesPage.MessageText = action.newMessage;\r\n            this._CallSubscriber(this._state);\r\n        }\r\n    },\r\n\r\n    \r\n}\r\n\r\nexport const addPostActionCreater = () => {\r\n    return{\r\n      type: 'ADD-POST'\r\n    }\r\n  }\r\n  \r\n  export  const updateNewTextActionCreater = (text) =>{\r\n    return{ type: 'UPDATE-NEW-POST-TEXT', newText: text\r\n    }\r\n  }\r\nexport default store;"],"mappings":"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"},"metadata":{},"sourceType":"module"}