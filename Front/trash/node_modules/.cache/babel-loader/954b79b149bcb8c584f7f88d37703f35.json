{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ilyas\\\\Desktop\\\\React tutorial\\\\it-kamasutra01\\\\src\\\\components\\\\Users\\\\UsersContainer.jsx\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { followAC, setCurrenPageAC, setUsersAC, setUsersTotalCountAC, ToggleIsFetchingAC, unfollowAC } from '../../Redux/users-reducer';\nimport Users from './Users';\nimport axios from 'axios';\nimport preloader from '../../assets/img/Spinner.svg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nclass UsersContainer extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.onPageChanged = pageNumber => {\n      this.props.setCurrentPage(pageNumber);\n      this.props.toggleIsFetching(true);\n      axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${pageNumber}&count=${this.props.pageSize}`).then(response => {\n        this.props.toggleIsFetching(false);\n        this.props.setUsers(response.data.items);\n      });\n    };\n  }\n  componentDidMount() {\n    this.props.toggleIsFetching(true);\n    axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${this.props.currentPage}&count=${this.props.pageSize}`).then(response => {\n      this.props.toggleIsFetching(false);\n      this.props.setUsers(response.data.items);\n      this.props.setTotalUsersCount(response.data.totalCount);\n    });\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [this.props.isFetching ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: preloader,\n          style: {\n            backgroundColor: 'white'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }, this) : null, /*#__PURE__*/_jsxDEV(Users, {\n        totalUsersCount: this.props.totalUsersCount,\n        pageSize: this.props.pageSize,\n        currentPage: this.props.currentPage,\n        onPageChanged: this.onPageChanged,\n        users: this.props.users,\n        unfollow: this.props.unfollow,\n        follow: this.props.follow\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true);\n  }\n}\nlet mapStateToProps = state => {\n  return {\n    users: state.usersPage.users,\n    pageSize: state.usersPage.pageSize,\n    totalUsersCount: state.usersPage.totalUsersCount,\n    currentPage: state.usersPage.currentPage,\n    isFetching: state.usersPage.isFetching\n  };\n};\nlet mapDispatchToProps = dispatch => {\n  return {\n    follow: userId => {\n      dispatch(followAC(userId));\n    },\n    unfollow: userId => {\n      dispatch(unfollowAC(userId));\n    },\n    setUsers: users => {\n      dispatch(setUsersAC(users));\n    },\n    setCurrentPage: pageNumber => {\n      dispatch(setCurrenPageAC(pageNumber));\n    },\n    setTotalUsersCount: totalCount => {\n      dispatch(setUsersTotalCountAC(totalCount));\n    },\n    toggleIsFetching: isFetching => {\n      dispatch(ToggleIsFetchingAC(isFetching));\n    }\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(UsersContainer);","map":{"version":3,"names":["React","connect","followAC","setCurrenPageAC","setUsersAC","setUsersTotalCountAC","ToggleIsFetchingAC","unfollowAC","Users","axios","preloader","UsersContainer","Component","onPageChanged","pageNumber","props","setCurrentPage","toggleIsFetching","get","pageSize","then","response","setUsers","data","items","componentDidMount","currentPage","setTotalUsersCount","totalCount","render","isFetching","backgroundColor","totalUsersCount","users","unfollow","follow","mapStateToProps","state","usersPage","mapDispatchToProps","dispatch","userId"],"sources":["C:/Users/Ilyas/Desktop/React tutorial/it-kamasutra01/src/components/Users/UsersContainer.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { followAC, setCurrenPageAC, setUsersAC, setUsersTotalCountAC, ToggleIsFetchingAC, unfollowAC } from '../../Redux/users-reducer';\r\nimport Users from './Users';\r\nimport axios from 'axios';\r\nimport preloader from '../../assets/img/Spinner.svg';\r\n\r\nclass UsersContainer extends React.Component{\r\n\r\n    componentDidMount(){\r\n        this.props.toggleIsFetching(true);\r\n        axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${this.props.currentPage}&count=${this.props.pageSize}`)\r\n            .then(response =>{\r\n                this.props.toggleIsFetching(false);\r\n                this.props.setUsers(response.data.items);\r\n                this.props.setTotalUsersCount(response.data.totalCount);\r\n            });\r\n    }\r\n\r\n    onPageChanged = (pageNumber) => {\r\n        this.props.setCurrentPage(pageNumber);\r\n        this.props.toggleIsFetching(true);\r\n        axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${pageNumber}&count=${this.props.pageSize}`)\r\n            .then(response =>{\r\n                this.props.toggleIsFetching(false);\r\n                this.props.setUsers(response.data.items);\r\n            });\r\n    }\r\n\r\n    render(){\r\n\r\n        return <>   \r\n        {this.props.isFetching ? \r\n            <div>\r\n                <img src={preloader} style={{backgroundColor:'white'}}/> \r\n            </div>: null}\r\n                \r\n            <Users   totalUsersCount={this.props.totalUsersCount}\r\n                        pageSize={this.props.pageSize}\r\n                        currentPage={this.props.currentPage}\r\n                        onPageChanged={this.onPageChanged}\r\n                        users={this.props.users}\r\n                        unfollow={this.props.unfollow}\r\n                        follow={this.props.follow}\r\n                        />\r\n                </>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) =>{\r\n    return{\r\n        users:state.usersPage.users,\r\n        pageSize: state.usersPage.pageSize,\r\n        totalUsersCount: state.usersPage.totalUsersCount,\r\n        currentPage: state.usersPage.currentPage,\r\n        isFetching: state.usersPage.isFetching,\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) =>{\r\n    return{\r\n        follow:(userId) => {\r\n            dispatch(followAC(userId));\r\n        },\r\n        unfollow:(userId) => {\r\n            dispatch(unfollowAC(userId));\r\n        },\r\n        setUsers:(users) => {\r\n            dispatch(setUsersAC(users));\r\n        },\r\n        setCurrentPage:(pageNumber) =>{\r\n            dispatch(setCurrenPageAC(pageNumber));\r\n        },\r\n        setTotalUsersCount:(totalCount) =>{\r\n            dispatch(setUsersTotalCountAC(totalCount));\r\n        },\r\n        toggleIsFetching:(isFetching) =>{\r\n            dispatch(ToggleIsFetchingAC(isFetching))\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UsersContainer);"],"mappings":"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"},"metadata":{},"sourceType":"module"}